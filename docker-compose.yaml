version: '3.9'
services:

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  mysql:
    container_name: mysql
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_USER: mysqluser
      MYSQL_PASSWORD: mysqluserpassword
      MYSQL_ROOT_PASSWORD: mysqlrootpassword
    ports:
      - '3306:3306'
    volumes:
      - ./mysql-init.sql:/docker-entrypoint-initdb.d/mysql-init.sql
      
  demo-spring-batch-remote-chunking-kafka:
    image: demo-spring-batch-remote-chunking-kafka:0.0.1-SNAPSHOT
    depends_on:
      - kafka
      - mysql   
    deploy:
      replicas: 1
    restart: always
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/demo
      SPRING_DATASOURCE_USERNAME: mysqluser
      SPRING_DATASOURCE_PASSWORD: mysqluserpassword
      SPRING_KAFKA_BOOTSTRAP-SERVERS: kafka:9092
      IMPORT_RANDOM_USER_PARTITIONS: 1
    ports:
      - '8080'

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - demo-spring-batch-remote-chunking-kafka
    ports:
      - "9090:9090"
